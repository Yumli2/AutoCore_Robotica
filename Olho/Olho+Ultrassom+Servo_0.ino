//Olho+Ultrassom+Servo_0.ino

//Olho+Ultrassom+Servo.ino

/*********************************************************************
This is an example for our Monochrome OLEDs based on SSD1306 drivers

  Pick one up today in the adafruit shop!
  ------> http://www.adafruit.com/category/63_98

This example is for a 128x64 size display using I2C to communicate
3 pins are required to interface (2 I2C and one reset)

Adafruit invests time and resources providing this open source code, 
please support Adafruit and open-source hardware by purchasing 
products from Adafruit!

Written by Limor Fried/Ladyada  for Adafruit Industries.  
BSD license, check license.txt for more information
All text above, and the splash screen must be included in any redistribution
*********************************************************************/

#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>


#define OLED_RESET 4
Adafruit_SSD1306 display(OLED_RESET);


#define NUMFLAKES 1
#define XPOS 0
#define YPOS 0
#define DELTAY 2



#define LOGO16_GLCD_HEIGHT 64//Altura
#define LOGO16_GLCD_WIDTH  128 //Largura
static const unsigned char PROGMEM logo16_glcd_bmp[] =
{};


static const unsigned char PROGMEM logo16_glcd_bmp2[] =
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 255, 255, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 255, 255, 255, 255, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 255, 254, 0, 0, 127, 255, 128, 0, 0, 0, 0, 0, 0, 0, 0, 15, 252, 0, 0, 0, 0, 63, 240, 0, 0, 0, 0, 0, 0, 0, 0, 255, 128, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 15, 240, 0, 0, 0, 0, 0, 0, 15, 240, 0, 0, 0, 0, 0, 0, 63, 192, 0, 0, 0, 0, 0, 0, 1, 252, 0, 0, 0, 0, 0, 1, 252, 0, 0, 0, 0, 0, 0, 0, 0, 15, 128, 0, 0, 0, 0, 7, 224, 0, 0, 0, 0, 0, 0, 0, 0, 3, 224, 0, 0, 0, 0, 31, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 0, 0, 0, 1, 240, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 128, 0, 0, 3, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 192, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 240, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 0, 0, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 1, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 128, 3, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 192, 7, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 3, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 192, 1, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 128, 0, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 15, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 0, 0, 3, 224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 192, 0, 0, 1, 240, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 128, 0, 0, 0, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62, 0, 0, 0, 0, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 7, 192, 0, 0, 0, 0, 0, 0, 0, 0, 3, 224, 0, 0, 0, 0, 1, 248, 0, 0, 0, 0, 0, 0, 0, 0, 7, 128, 0, 0, 0, 0, 0, 63, 0, 0, 0, 0, 0, 0, 0, 0, 60, 0, 0, 0, 0, 0, 0, 15, 240, 0, 0, 0, 0, 0, 0, 3, 240, 0, 0, 0, 0, 0, 0, 0, 254, 0, 0, 0, 0, 0, 0, 127, 0, 0, 0, 0, 0, 0, 0, 0, 15, 254, 0, 0, 0, 0, 127, 240, 0, 0, 0, 0, 0, 0, 0, 0, 1, 255, 248, 0, 0, 255, 255, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 255, 255, 255, 255, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 255, 255, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};



#if (SSD1306_LCDHEIGHT != 64)
#error("Height incorrect, please fix Adafruit_SSD1306.h!");
#endif

void setup()   {                
  Serial.begin(9600);
  //dht.begin();//Inicializa a biblioteca
  //pinMode(echoPin, INPUT); // define o pino 13 como entrada (recebe)
  //pinMode(trigPin, OUTPUT); // define o pino 12 como saida (envia)

  // by default, we'll generate the high voltage from the 3.3v line internally! (neat!)
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);  // initialize with the I2C addr 0x3D (for the 128x64)
 
  display.clearDisplay();
  //testdrawbitmap(logo16_glcd_bmp, LOGO16_GLCD_WIDTH,LOGO16_GLCD_HEIGHT);
}


void loop() {
  //testdrawbitmap(logo16_glcd_bmp, LOGO16_GLCD_WIDTH,LOGO16_GLCD_HEIGHT);
  centroOlho(logo16_glcd_bmp, LOGO16_GLCD_WIDTH,LOGO16_GLCD_HEIGHT);
}


void centroOlho(const uint8_t *bitmap, uint8_t w, uint8_t h){
      for (float i=2; i<3.5; i+=0.2) {
        display.drawBitmap(0,0, logo16_glcd_bmp2, w, h, WHITE);
        display.drawCircle(display.width()/i, display.height()/2, 17, WHITE);
        display.display();
        display.clearDisplay();
    }
}
/*
void fechaOlho(const uint8_t *bitmap, uint8_t w, uint8_t h){
  display.clearDisplay();
  for (uint8_t f=0; f< NUMFLAKES; f++) {
      display.drawBitmap(0, 0, logo16_glcd_bmp, w, h, WHITE);
    }
      display.display();
      delay(random(5000));
      display.clearDisplay();

}


//for (float i=2; i<3.5; i+=0.2) {

*/



